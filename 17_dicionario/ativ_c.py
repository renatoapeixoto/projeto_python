# Desenvolva um programa que crie um dicion√°rio contendo 5 ferramentas, onde o 
# nome de cada ferramenta ser√° a chave e seu respectivo valor ser√° uma descri√ß√£o 
# ou especifica√ß√£o t√©cnica dessa ferramenta (como tipo de uso, material, etc.). 
# O programa deve permitir que o usu√°rio altere o valor de qualquer ferramenta 
# j√° inserida. Ap√≥s a cria√ß√£o e poss√≠vel modifica√ß√£o do dicion√°rio, o programa 
# deve imprimir n√£o apenas os valores de cada ferramenta, mas tamb√©m a quantidade
# total de elementos presentes no dicion√°rio. Em seguida, o programa deve listar 
# todas as ferramentas armazenadas, juntamente com suas descri√ß√µes, ordenadas 
# alfabeticamente por nome, e, por fim, fornecer um relat√≥rio mostrando a 
# quantidade de ferramentas que t√™m mais de uma palavra no nome.


import os
os.system('cls')


# Cria√ß√£o do dicion√°rio contendo 5 ferramentas
ferramentas = {
    "Martelo": {
        "Descri√ß√£o": "Ferramenta usada para pregar e quebrar objetos",
        "Material": "A√ßo e madeira",
        "Utilidade": "Pregar pregos e quebrar materiais"
    },
    "Chave de Fenda": {
        "Descri√ß√£o": "Ferramenta para apertar ou soltar parafusos",
        "Material": "A√ßo e pl√°stico",
        "Utilidade": "Ajustar parafusos"
    },
    "Alicate": {
        "Descri√ß√£o": "Ferramenta para segurar, cortar e dobrar",
        "Material": "A√ßo carbono",
        "Utilidade": "Segurar e cortar fios"
    },
    "Serrote": {
        "Descri√ß√£o": "Ferramenta de corte com dentes afiados",
        "Material": "A√ßo temperado",
        "Utilidade": "Cortar madeira"
    },
    "Furadeira": {
        "Descri√ß√£o": "Ferramenta el√©trica para fazer furos",
        "Material": "A√ßo e pl√°stico",
        "Utilidade": "Perfura√ß√£o de superf√≠cies"
    }
}

# Usando .items() para ver as chaves principais e os subdicion√°rios
for ferramenta, detalhes in ferramentas.items():
    print(f"Ferramenta: {ferramenta}")
    for chave, valor in detalhes.items():
        print(f"{chave}:{valor}")
    print()
exit()






# Fun√ß√£o para exibir as ferramentas e seus detalhes
def exibir_ferramentas():
    print("\nFerramentas armazenadas:")
    for nome, detalhes in ferramentas.items():
        print(f"\nüîß {nome}:")
        for chave, valor in detalhes.items():
            print(f"  {chave}: {valor}")

# Fun√ß√£o para modificar uma ferramenta
def alterar_ferramenta():
    nome = input("\nDigite o nome da ferramenta que deseja alterar: ")
    if nome in ferramentas:
        print("\nEscolha o que deseja alterar:")
        print("1 - Descri√ß√£o")
        print("2 - Material")
        print("3 - Utilidade")
        escolha = input("Digite o n√∫mero da sua escolha: ")

        if escolha == "1":
            nova_descricao = input("Digite a nova descri√ß√£o: ")
            ferramentas[nome]["Descri√ß√£o"] = nova_descricao
        elif escolha == "2":
            novo_material = input("Digite o novo material: ")
            ferramentas[nome]["Material"] = novo_material
        elif escolha == "3":
            nova_utilidade = input("Digite a nova utilidade: ")
            ferramentas[nome]["Utilidade"] = nova_utilidade
        else:
            print("Escolha inv√°lida.")
        print(f"\nüîÑ Ferramenta '{nome}' atualizada com sucesso!")
    else:
        print("‚ùå Ferramenta n√£o encontrada.")

# Exibir as ferramentas inicialmente
exibir_ferramentas()

# Modificar uma ferramenta
alterar_ferramenta()

# Exibir as ferramentas ap√≥s a modifica√ß√£o
exibir_ferramentas()
